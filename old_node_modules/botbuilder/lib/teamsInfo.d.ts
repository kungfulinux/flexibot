/**
 * @module botbuilder
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { Activity, ChannelInfo, TeamsChannelAccount, TeamDetails, TurnContext, TeamsPagedMembersResult, ConversationReference } from 'botbuilder-core';
export declare class TeamsInfo {
    static getTeamDetails(context: TurnContext, teamId?: string): Promise<TeamDetails>;
    static sendMessageToTeamsChannel(context: TurnContext, activity: Activity, teamsChannelId: string): Promise<[ConversationReference, string]>;
    static getTeamChannels(context: TurnContext, teamId?: string): Promise<ChannelInfo[]>;
    static getMembers(context: TurnContext): Promise<TeamsChannelAccount[]>;
    static getPagedMembers(context: TurnContext, pageSize?: number, continuationToken?: string): Promise<TeamsPagedMembersResult>;
    static getMember(context: TurnContext, userId: string): Promise<TeamsChannelAccount>;
    static getTeamMembers(context: TurnContext, teamId?: string): Promise<TeamsChannelAccount[]>;
    static getPagedTeamMembers(context: TurnContext, teamId?: string, pageSize?: number, continuationToken?: string): Promise<TeamsPagedMembersResult>;
    static getTeamMember(context: TurnContext, teamId?: string, userId?: string): Promise<TeamsChannelAccount>;
    private static getMembersInternal;
    private static getPagedMembersInternal;
    private static getMemberInternal;
    private static getTeamId;
    private static getConnectorClient;
    private static getTeamsConnectorClient;
}
//# sourceMappingURL=teamsInfo.d.ts.map